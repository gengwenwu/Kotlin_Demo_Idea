package org.logan.test.kotlin.basic.cp09

/**
 * desc: 实化类型参数的限制 <br/>
 * time: 2020/1/9 11:50 上午 <br/>
 * author: Logan <br/>
 * since V 1.0 <br/>
 */
// 具体来说，
// 可以按下面的方式使用实化类型参数:
// 1，用在类型检查和类型转换中( is、!is、 as、 as?)。
// 2，使用Kotlin反射API，我们将在第10章讨论(::class)。
// 3，获取相应的 java.lang.Class (::class.java)。
// 4，作为调用其他函数的类型实参。

// 不能做下面这些事情:
// 1，创建指定为类型参数的类的实例。
// 2，调用类型参数类的伴生对象的方法。
// 3，调用带实化类型参数函数的时候，使用非实化类型形参作为类型实参。
// 4，把类、属性或者非内联函数的类型参数标记成reified。